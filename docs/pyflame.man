.\" Automatically generated by Pandoc 1.19.1
.\"
.TH "PYFLAME" "1" "July 2017" "" ""
.hy
.SH NAME
.PP
pyflame \- A Ptracing Python Profiler
.SH SYNOPSIS
.PP
\f[B]pyflame\f[] [\f[B]options\f[]] \f[I]PID\f[]
.PP
\f[B]pyflame\f[] [\f[B]options\f[]] [\f[B]\-t\f[]|\f[B]\-\-trace\f[]]
\f[I]command\f[] [\f[I]args\f[]...]
.SH DESCRIPTION
.PP
\f[B]pyflame\f[] profiles Python processes using \f[B]ptrace\f[](2) to
extract stack information.
There are two modes.
In the default mode pyflame will attach to a running process to get
profiling data.
If, instead, the \f[B]\-t\f[] or \f[B]\-\-trace\f[] options are given,
pyflame will instead interpret the rest of the command line as a command
to run, and trace it to completion.
.PP
The output of \f[B]pyflame\f[] is intended to be used with Brendan
Gregg\[aq]s \f[I]flamegraph.pl\f[] script, which can be found on GitHub
at <https://github.com/brendangregg/FlameGraph>.
.SH GENERAL OPTIONS
.TP
.B \f[B]\-\-abi\f[]=\f[I]VERSION\f[]
Force a particular Python ABI.
This is an advanced option, only needed in edge cases when profiling
embedded Python builds (e.g.
uWSGI).
The version
.RS
.RE
.TP
.B \f[B]\-\-threads\f[]
Enable profiling multi\-threaded Python apps.
.RS
.RE
.TP
.B \f[B]\-h\f[], \f[B]\-\-help\f[]
Display a friendly help message.
.RS
.RE
.TP
.B \f[B]\-o\f[], \f[B]\-\-output\f[]=\f[I]FILENAME\f[]
Write profiling output to \f[I]FILENAME\f[] (otherwise stdout is used).
.RS
.RE
.TP
.B \f[B]\-s\f[], \f[B]\-\-seconds\f[]=\f[I]SECONDS\f[]
Profile the process for duration \f[I]SECONDS\f[] before detaching.
The default is to profile for 1 second.
This option is not compatible with trace mode.
.RS
.RE
.TP
.B \f[B]\-r\f[], \f[B]\-\-rate\f[]=\f[I]RATE\f[]
Sample the process at this frequency.
The argument \f[I]RATE\f[] is interpreted as a fractional value,
measured in seconds.
For example, \f[B]\-r 0.01\f[] would mean to sample the process every
0.01 seconds (i.e.
every 10 milliseconds).
The default value for \f[I]RATE\f[] is 0.001, which samples every
millisecond.
.RS
.PP
Note that setting a low value for rate will increase the accuracy of
profiles, but it also increases the overhead introduced by Pyflame.
The default frequency used by Pyflame is relatively aggressive; a less
aggressive value like \f[B]\-r 0.01\f[] may be more appropriate if you
are profiling processes in production.
.RE
.TP
.B \f[B]\-t\f[], \f[B]\-\-trace\f[] \f[I]command\f[] [\f[I]args\f[]...]
Run pyflame in trace mode, which traces the child process until
completion.
If used, this must be the final argument (the rest of the arguments will
be interpreted as a command plus arguments to the command).
This is analogous to \f[B]strace\f[](1) in its default mode.
.RS
.RE
.TP
.B \f[B]\-T\f[], \f[B]\-\-timestamp\f[]
Print the timestamp for each stack.
This is useful for generating "flame chart" profiles.
.RS
.RE
.TP
.B \f[B]\-v\f[], \f[B]\-\-version\f[]
Print the version.
.RS
.RE
.TP
.B \f[B]\-x\f[], \f[B]\-\-exclude\-idle\f[]
Exclude "idle" time from output.
.RS
.RE
.SH ONLINE DOCUMENTATION
.PP
You can find the complete documentation online at:
<https://pyflame.readthedocs.io/>.
The online documentation is more comprehensive than this man page, and
includes usage examples.
.SH REPORTING BUGS
.PP
If you find any bugs, please create a new issue on GitHub:
<https://github.com/uber/pyflame>
.SH AUTHORS
Evan Klitzke <evan@eklitzke.org>.
